/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if(head == null)
            return head;
        
        int len = 0;
        ListNode temp = head;
        
        while(temp!=null) {
            temp = temp.next;
            len++;
        }
        
        k = k%len;
        if(k == 0)
            return head;
        
        ListNode fast = head;
        ListNode slow = head;
        
        int i=0;
        while(i<k) {
            
            fast= fast.next;
            i++;
        }
        
        while(fast.next!=null) {
            slow= slow.next;
            fast = fast.next;
        }
        
        ListNode h = slow.next;
        slow.next = null;
        fast.next = head;
        
        return h;
    }
}
