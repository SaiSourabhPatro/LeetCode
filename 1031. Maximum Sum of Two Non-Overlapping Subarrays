```
class Solution {
    public int maxSumTwoNoOverlap(int[] A, int L, int M) {
        return Math.max (calculate(A, L, M), calculate(A, M, L));
    }
    
    public int calculate(int[] A, int L, int M) {
        
        int[] left = new int[A.length+1];
        int[] right = new int[A.length+1];
        int res = 0;
        
        int sum_l =0, sum_r=0;
        for(int i=0,j=A.length-1;i<A.length;i++,j--) {
            
            sum_l += A[i];
            sum_r += A[j];
            
            left[i+1] = Math.max(left[i], sum_l);
            right[j] = Math.max(right[j+1], sum_r);
            
            if(i+1 >= L)
                sum_l -= A[i+1-L];
            if(i+1 >= M)
                sum_r  -= A[j+M-1];
            
        }
        
        for(int i=1;i<A.length;i++) {
            
            res = Math.max(res, left[i]+right[i]);
        }
        return res;
        
    }
}
