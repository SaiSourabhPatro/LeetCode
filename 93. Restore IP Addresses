class Solution {
    public List<String> restoreIpAddresses(String s) {
        
        List<String> result = new ArrayList<>();
        int len = s.length();
        
        if(len < 4 || len > 12)
            return result;
     
        if(len >= 4 && len <= 12) {
            
            backtrack(s, result, len, 0, "",0);
        }
        return result;    
    }
    
    public void backtrack(String s, List<String> result, int remLength, int index, String ms, int depth) {
        
        
        if(depth == 4) {
            if (remLength == 0)
                result.add(ms.substring(0,ms.length()-1));
            return;
        }
        
        for(int i=index;i<s.length();i++) {
            
            String subs = s.substring(index,i+1);
            StringBuilder sb = new StringBuilder();
            
            if(Integer.valueOf(subs) < 256) {
                
                if(subs.length() > 1 && subs.charAt(0) == '0')
                    return;
                sb.append(subs +".");
                backtrack(s,result,remLength-subs.length(), i+1, ms+sb.toString(), depth+1);
            } else
                return;
            
        }
        
    }
}
