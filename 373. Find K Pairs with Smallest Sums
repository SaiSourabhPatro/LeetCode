class Solution {
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        
        List<List<Integer>> res = new ArrayList<>();
        PriorityQueue<List<Integer>> pq = new PriorityQueue<>((a,b) -> (b.get(0)+b.get(1)) - (a.get(0)+a.get(1)));
        
        for(int i=0;i<nums1.length;i++) {
            for(int j=0;j<nums2.length;j++) {
                
                List<Integer> ls = new ArrayList<Integer>();
                ls.add(nums1[i]);
                ls.add(nums2[j]);
                
                if(pq.size() == k && (nums1[i]+nums2[j] > pq.peek().get(0)+pq.peek().get(1)))
                    break;
                pq.offer(ls);
                if(pq.size() > k) {
                    
                    pq.poll();
                }
            }
        }
        while(!pq.isEmpty()) {
            
            res.add(0,pq.poll());
        }
        return res;
    }
}
