class Solution {
    public List<String> letterCombinations(String digits) {
        
       
        List<String> res = new ArrayList<>();
         if(digits.length()  == 0)
            return res;
        HashMap<String,String> hm = new HashMap<>();
        
        hm.put("2","abc");
        hm.put("3","def");
        hm.put("4","ghi");
        hm.put("5","jkl");
        hm.put("6","mno");
        hm.put("7","pqrs");
        hm.put("8","tuv");
        hm.put("9","wxyz");
        
        backtrack(hm, digits, res, "", digits.length());
        return res;
    }
    
    public void backtrack(HashMap<String,String> hm, String digits, List<String> res, String s, int len) {
        
        if(s.length() == len) {
            res.add(s);
            return;
        }

            String st = hm.get(""+digits.charAt(0));
            for(int j=0;j<st.length();j++) {
            
                 backtrack(hm,digits.substring(1), res, s+st.charAt(j) , len);
            }
        
    }
}
