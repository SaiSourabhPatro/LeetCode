class Solution {
    
    int max_v = 0;
    public int getMaximumGold(int[][] grid) {
        
        for(int i=0;i<grid.length;i++) {
            for(int j=0;j<grid[0].length;j++) {
                
                if(grid[i][j] != 0)
                    DFS(grid, i, j, 0);
            }
        }
        return max_v;
    }
    
    public void DFS(int[][] grid, int i, int j, int sum) {
        
        if(i<0 || j<0 || i>=grid.length || j>=grid[0].length || grid[i][j] == 0)
            return;
        
        int val = grid[i][j];
        sum += val;
        max_v = Math.max(max_v, sum);
        
        grid[i][j] = 0;
        
        DFS(grid,i+1,j,sum);
        DFS(grid,i-1,j,sum);
        DFS(grid,i,j+1,sum);
        DFS(grid,i,j-1,sum);
        
        grid[i][j] = val;
    }
}
