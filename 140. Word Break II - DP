class Solution {
    public List<String> wordBreak(String s, List<String> wordDict) {
        
        HashSet<String> dict = new HashSet<>(wordDict);
        
        //check if there is atleast one possible sentence : this is sames as Word Break- I
        boolean[] dp1 = new boolean[s.length()+1];
        dp1[0] = true;
        
        for(int i=1;i<=s.length();i++) {
            
            for(int j=0;j<i;j++) {
                
                if(dp1[j] && dict.contains(s.substring(j,i))) {
                    
                    dp1[i] = true;
                    break;
                }
            }
        }
        
        // we terminate if there isn't a valid sentence at all
        if(!dp1[s.length()]) {
            
            return new ArrayList<String>();
        }
        
        //Build the results with  dynamic programming
        List<String>[] dp = new LinkedList[s.length()+1];
        List<String> first = new LinkedList<>();
        first.add("");
        dp[0] = first;
        
        for(int i=1;i<=s.length();i++) {
            
            List<String> list = new LinkedList<String>();
            
            for(int j=0;j<i;j++) {
                
                if(dp[j].size() > 0 && dict.contains(s.substring(j,i))) {
                    for(String l : dp[j]) {
                        
                        list.add(l + (l.equals("") ? "" : " ") + s.substring(j,i));
                    }
                    
                }
            }
            dp[i] = list;
        }
        
        return dp[s.length()];
    }
}
